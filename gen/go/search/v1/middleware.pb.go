// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: search/v1/middleware.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppSendResponse_Result int32

const (
	AppSendResponse_RESULT_UNSPECIFIED AppSendResponse_Result = 0
	AppSendResponse_RESULT_OK          AppSendResponse_Result = 1
	AppSendResponse_RESULT_ERR         AppSendResponse_Result = 2
)

// Enum value maps for AppSendResponse_Result.
var (
	AppSendResponse_Result_name = map[int32]string{
		0: "RESULT_UNSPECIFIED",
		1: "RESULT_OK",
		2: "RESULT_ERR",
	}
	AppSendResponse_Result_value = map[string]int32{
		"RESULT_UNSPECIFIED": 0,
		"RESULT_OK":          1,
		"RESULT_ERR":         2,
	}
)

func (x AppSendResponse_Result) Enum() *AppSendResponse_Result {
	p := new(AppSendResponse_Result)
	*p = x
	return p
}

func (x AppSendResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppSendResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_search_v1_middleware_proto_enumTypes[0].Descriptor()
}

func (AppSendResponse_Result) Type() protoreflect.EnumType {
	return &file_search_v1_middleware_proto_enumTypes[0]
}

func (x AppSendResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppSendResponse_Result.Descriptor instead.
func (AppSendResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{0, 0}
}

type InitChannelResponse_Result int32

const (
	InitChannelResponse_RESULT_UNSPECIFIED InitChannelResponse_Result = 0
	InitChannelResponse_RESULT_ACK         InitChannelResponse_Result = 1
	InitChannelResponse_RESULT_ERR         InitChannelResponse_Result = 2
)

// Enum value maps for InitChannelResponse_Result.
var (
	InitChannelResponse_Result_name = map[int32]string{
		0: "RESULT_UNSPECIFIED",
		1: "RESULT_ACK",
		2: "RESULT_ERR",
	}
	InitChannelResponse_Result_value = map[string]int32{
		"RESULT_UNSPECIFIED": 0,
		"RESULT_ACK":         1,
		"RESULT_ERR":         2,
	}
)

func (x InitChannelResponse_Result) Enum() *InitChannelResponse_Result {
	p := new(InitChannelResponse_Result)
	*p = x
	return p
}

func (x InitChannelResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitChannelResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_search_v1_middleware_proto_enumTypes[1].Descriptor()
}

func (InitChannelResponse_Result) Type() protoreflect.EnumType {
	return &file_search_v1_middleware_proto_enumTypes[1]
}

func (x InitChannelResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitChannelResponse_Result.Descriptor instead.
func (InitChannelResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{5, 0}
}

type StartChannelResponse_Result int32

const (
	StartChannelResponse_RESULT_UNSPECIFIED StartChannelResponse_Result = 0
	StartChannelResponse_RESULT_ACK         StartChannelResponse_Result = 1
	StartChannelResponse_RESULT_ERR         StartChannelResponse_Result = 2
)

// Enum value maps for StartChannelResponse_Result.
var (
	StartChannelResponse_Result_name = map[int32]string{
		0: "RESULT_UNSPECIFIED",
		1: "RESULT_ACK",
		2: "RESULT_ERR",
	}
	StartChannelResponse_Result_value = map[string]int32{
		"RESULT_UNSPECIFIED": 0,
		"RESULT_ACK":         1,
		"RESULT_ERR":         2,
	}
)

func (x StartChannelResponse_Result) Enum() *StartChannelResponse_Result {
	p := new(StartChannelResponse_Result)
	*p = x
	return p
}

func (x StartChannelResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartChannelResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_search_v1_middleware_proto_enumTypes[2].Descriptor()
}

func (StartChannelResponse_Result) Type() protoreflect.EnumType {
	return &file_search_v1_middleware_proto_enumTypes[2]
}

func (x StartChannelResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartChannelResponse_Result.Descriptor instead.
func (StartChannelResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{7, 0}
}

type CloseChannelResponse_Result int32

const (
	CloseChannelResponse_RESULT_UNSPECIFIED      CloseChannelResponse_Result = 0
	CloseChannelResponse_RESULT_CLOSED           CloseChannelResponse_Result = 1
	CloseChannelResponse_RESULT_PENDING_INBOUND  CloseChannelResponse_Result = 2
	CloseChannelResponse_RESULT_PENDING_OUTBOUND CloseChannelResponse_Result = 3
)

// Enum value maps for CloseChannelResponse_Result.
var (
	CloseChannelResponse_Result_name = map[int32]string{
		0: "RESULT_UNSPECIFIED",
		1: "RESULT_CLOSED",
		2: "RESULT_PENDING_INBOUND",
		3: "RESULT_PENDING_OUTBOUND",
	}
	CloseChannelResponse_Result_value = map[string]int32{
		"RESULT_UNSPECIFIED":      0,
		"RESULT_CLOSED":           1,
		"RESULT_PENDING_INBOUND":  2,
		"RESULT_PENDING_OUTBOUND": 3,
	}
)

func (x CloseChannelResponse_Result) Enum() *CloseChannelResponse_Result {
	p := new(CloseChannelResponse_Result)
	*p = x
	return p
}

func (x CloseChannelResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloseChannelResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_search_v1_middleware_proto_enumTypes[3].Descriptor()
}

func (CloseChannelResponse_Result) Type() protoreflect.EnumType {
	return &file_search_v1_middleware_proto_enumTypes[3]
}

func (x CloseChannelResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloseChannelResponse_Result.Descriptor instead.
func (CloseChannelResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{9, 0}
}

type MessageExchangeResponse_Result int32

const (
	MessageExchangeResponse_RESULT_UNSPECIFIED MessageExchangeResponse_Result = 0
	MessageExchangeResponse_RESULT_OK          MessageExchangeResponse_Result = 1
	MessageExchangeResponse_RESULT_ERROR       MessageExchangeResponse_Result = 2
)

// Enum value maps for MessageExchangeResponse_Result.
var (
	MessageExchangeResponse_Result_name = map[int32]string{
		0: "RESULT_UNSPECIFIED",
		1: "RESULT_OK",
		2: "RESULT_ERROR",
	}
	MessageExchangeResponse_Result_value = map[string]int32{
		"RESULT_UNSPECIFIED": 0,
		"RESULT_OK":          1,
		"RESULT_ERROR":       2,
	}
)

func (x MessageExchangeResponse_Result) Enum() *MessageExchangeResponse_Result {
	p := new(MessageExchangeResponse_Result)
	*p = x
	return p
}

func (x MessageExchangeResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageExchangeResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_search_v1_middleware_proto_enumTypes[4].Descriptor()
}

func (MessageExchangeResponse_Result) Type() protoreflect.EnumType {
	return &file_search_v1_middleware_proto_enumTypes[4]
}

func (x MessageExchangeResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageExchangeResponse_Result.Descriptor instead.
func (MessageExchangeResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{10, 0}
}

type AppSendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result AppSendResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=search.v1.AppSendResponse_Result" json:"result,omitempty"`
}

func (x *AppSendResponse) Reset() {
	*x = AppSendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSendResponse) ProtoMessage() {}

func (x *AppSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSendResponse.ProtoReflect.Descriptor instead.
func (*AppSendResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{0}
}

func (x *AppSendResponse) GetResult() AppSendResponse_Result {
	if x != nil {
		return x.Result
	}
	return AppSendResponse_RESULT_UNSPECIFIED
}

type AppRecvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId   string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Participant string `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *AppRecvRequest) Reset() {
	*x = AppRecvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRecvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRecvRequest) ProtoMessage() {}

func (x *AppRecvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRecvRequest.ProtoReflect.Descriptor instead.
func (*AppRecvRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{1}
}

func (x *AppRecvRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AppRecvRequest) GetParticipant() string {
	if x != nil {
		return x.Participant
	}
	return ""
}

type RegisterChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequirementsContract *GlobalContract               `protobuf:"bytes,1,opt,name=requirements_contract,json=requirementsContract,proto3" json:"requirements_contract,omitempty"`
	PresetParticipants   map[string]*RemoteParticipant `protobuf:"bytes,2,rep,name=preset_participants,json=presetParticipants,proto3" json:"preset_participants,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Mapping of participants that we don't want brokered.
}

func (x *RegisterChannelRequest) Reset() {
	*x = RegisterChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterChannelRequest) ProtoMessage() {}

func (x *RegisterChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterChannelRequest.ProtoReflect.Descriptor instead.
func (*RegisterChannelRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterChannelRequest) GetRequirementsContract() *GlobalContract {
	if x != nil {
		return x.RequirementsContract
	}
	return nil
}

func (x *RegisterChannelRequest) GetPresetParticipants() map[string]*RemoteParticipant {
	if x != nil {
		return x.PresetParticipants
	}
	return nil
}

type RegisterChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *RegisterChannelResponse) Reset() {
	*x = RegisterChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterChannelResponse) ProtoMessage() {}

func (x *RegisterChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterChannelResponse.ProtoReflect.Descriptor instead.
func (*RegisterChannelResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterChannelResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

// This is something that is sent by the Broker to providers to notify that a new channel is starting
type InitChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId    string                        `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AppId        string                        `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                                                                                          // which app behind the middleware is being notified
	Participants map[string]*RemoteParticipant `protobuf:"bytes,3,rep,name=participants,proto3" json:"participants,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // int32 seq = 4; // sequence number (used because we may need multiple rounds until all participants are ready)
}

func (x *InitChannelRequest) Reset() {
	*x = InitChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitChannelRequest) ProtoMessage() {}

func (x *InitChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitChannelRequest.ProtoReflect.Descriptor instead.
func (*InitChannelRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{4}
}

func (x *InitChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *InitChannelRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *InitChannelRequest) GetParticipants() map[string]*RemoteParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type InitChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result InitChannelResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=search.v1.InitChannelResponse_Result" json:"result,omitempty"`
}

func (x *InitChannelResponse) Reset() {
	*x = InitChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitChannelResponse) ProtoMessage() {}

func (x *InitChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitChannelResponse.ProtoReflect.Descriptor instead.
func (*InitChannelResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{5}
}

func (x *InitChannelResponse) GetResult() InitChannelResponse_Result {
	if x != nil {
		return x.Result
	}
	return InitChannelResponse_RESULT_UNSPECIFIED
}

type StartChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *StartChannelRequest) Reset() {
	*x = StartChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChannelRequest) ProtoMessage() {}

func (x *StartChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChannelRequest.ProtoReflect.Descriptor instead.
func (*StartChannelRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{6}
}

func (x *StartChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *StartChannelRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type StartChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result StartChannelResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=search.v1.StartChannelResponse_Result" json:"result,omitempty"`
}

func (x *StartChannelResponse) Reset() {
	*x = StartChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChannelResponse) ProtoMessage() {}

func (x *StartChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChannelResponse.ProtoReflect.Descriptor instead.
func (*StartChannelResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{7}
}

func (x *StartChannelResponse) GetResult() StartChannelResponse_Result {
	if x != nil {
		return x.Result
	}
	return StartChannelResponse_RESULT_UNSPECIFIED
}

type CloseChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *CloseChannelRequest) Reset() {
	*x = CloseChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChannelRequest) ProtoMessage() {}

func (x *CloseChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChannelRequest.ProtoReflect.Descriptor instead.
func (*CloseChannelRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{8}
}

func (x *CloseChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type CloseChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                         CloseChannelResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=search.v1.CloseChannelResponse_Result" json:"result,omitempty"`
	ErrorMessage                   string                      `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ParticipantsWithPendingInbound []string                    `protobuf:"bytes,3,rep,name=participants_with_pending_inbound,json=participantsWithPendingInbound,proto3" json:"participants_with_pending_inbound,omitempty"`
}

func (x *CloseChannelResponse) Reset() {
	*x = CloseChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChannelResponse) ProtoMessage() {}

func (x *CloseChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChannelResponse.ProtoReflect.Descriptor instead.
func (*CloseChannelResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{9}
}

func (x *CloseChannelResponse) GetResult() CloseChannelResponse_Result {
	if x != nil {
		return x.Result
	}
	return CloseChannelResponse_RESULT_UNSPECIFIED
}

func (x *CloseChannelResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CloseChannelResponse) GetParticipantsWithPendingInbound() []string {
	if x != nil {
		return x.ParticipantsWithPendingInbound
	}
	return nil
}

type MessageExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       MessageExchangeResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=search.v1.MessageExchangeResponse_Result" json:"result,omitempty"`
	ErrorMessage string                         `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *MessageExchangeResponse) Reset() {
	*x = MessageExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_v1_middleware_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageExchangeResponse) ProtoMessage() {}

func (x *MessageExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_middleware_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageExchangeResponse.ProtoReflect.Descriptor instead.
func (*MessageExchangeResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_middleware_proto_rawDescGZIP(), []int{10}
}

func (x *MessageExchangeResponse) GetResult() MessageExchangeResponse_Result {
	if x != nil {
		return x.Result
	}
	return MessageExchangeResponse_RESULT_UNSPECIFIED
}

func (x *MessageExchangeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_search_v1_middleware_proto protoreflect.FileDescriptor

var file_search_v1_middleware_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x02, 0x22, 0x51, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x63, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0xb9, 0x02, 0x0a, 0x16, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x6a, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x1a, 0x63, 0x0a, 0x17, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x38, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x22, 0xfe, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x53, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x1a, 0x5d, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x02, 0x22, 0x4b, 0x0a, 0x13, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x40, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x41, 0x43, 0x4b,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x52, 0x52,
	0x10, 0x02, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xb4, 0x02, 0x0a, 0x14, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x21, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x1e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x22, 0x6c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x52,
	0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4c,
	0x4f, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22,
	0xc4, 0x01, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x4f, 0x4b, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x32, 0xcf, 0x02, 0x0a, 0x18, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x1e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x52, 0x65, 0x63, 0x76, 0x12,
	0x19, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x63, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x63, 0x76, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x9a, 0x02, 0x0a, 0x17, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6d, 0x6f, 0x6e, 0x74, 0x65, 0x70, 0x61, 0x67, 0x61, 0x6e, 0x6f,
	0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_search_v1_middleware_proto_rawDescOnce sync.Once
	file_search_v1_middleware_proto_rawDescData = file_search_v1_middleware_proto_rawDesc
)

func file_search_v1_middleware_proto_rawDescGZIP() []byte {
	file_search_v1_middleware_proto_rawDescOnce.Do(func() {
		file_search_v1_middleware_proto_rawDescData = protoimpl.X.CompressGZIP(file_search_v1_middleware_proto_rawDescData)
	})
	return file_search_v1_middleware_proto_rawDescData
}

var file_search_v1_middleware_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_search_v1_middleware_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_search_v1_middleware_proto_goTypes = []interface{}{
	(AppSendResponse_Result)(0),         // 0: search.v1.AppSendResponse.Result
	(InitChannelResponse_Result)(0),     // 1: search.v1.InitChannelResponse.Result
	(StartChannelResponse_Result)(0),    // 2: search.v1.StartChannelResponse.Result
	(CloseChannelResponse_Result)(0),    // 3: search.v1.CloseChannelResponse.Result
	(MessageExchangeResponse_Result)(0), // 4: search.v1.MessageExchangeResponse.Result
	(*AppSendResponse)(nil),             // 5: search.v1.AppSendResponse
	(*AppRecvRequest)(nil),              // 6: search.v1.AppRecvRequest
	(*RegisterChannelRequest)(nil),      // 7: search.v1.RegisterChannelRequest
	(*RegisterChannelResponse)(nil),     // 8: search.v1.RegisterChannelResponse
	(*InitChannelRequest)(nil),          // 9: search.v1.InitChannelRequest
	(*InitChannelResponse)(nil),         // 10: search.v1.InitChannelResponse
	(*StartChannelRequest)(nil),         // 11: search.v1.StartChannelRequest
	(*StartChannelResponse)(nil),        // 12: search.v1.StartChannelResponse
	(*CloseChannelRequest)(nil),         // 13: search.v1.CloseChannelRequest
	(*CloseChannelResponse)(nil),        // 14: search.v1.CloseChannelResponse
	(*MessageExchangeResponse)(nil),     // 15: search.v1.MessageExchangeResponse
	nil,                                 // 16: search.v1.RegisterChannelRequest.PresetParticipantsEntry
	nil,                                 // 17: search.v1.InitChannelRequest.ParticipantsEntry
	(*GlobalContract)(nil),              // 18: search.v1.GlobalContract
	(*RemoteParticipant)(nil),           // 19: search.v1.RemoteParticipant
	(*AppSendRequest)(nil),              // 20: search.v1.AppSendRequest
	(*MessageExchangeRequest)(nil),      // 21: search.v1.MessageExchangeRequest
	(*AppRecvResponse)(nil),             // 22: search.v1.AppRecvResponse
}
var file_search_v1_middleware_proto_depIdxs = []int32{
	0,  // 0: search.v1.AppSendResponse.result:type_name -> search.v1.AppSendResponse.Result
	18, // 1: search.v1.RegisterChannelRequest.requirements_contract:type_name -> search.v1.GlobalContract
	16, // 2: search.v1.RegisterChannelRequest.preset_participants:type_name -> search.v1.RegisterChannelRequest.PresetParticipantsEntry
	17, // 3: search.v1.InitChannelRequest.participants:type_name -> search.v1.InitChannelRequest.ParticipantsEntry
	1,  // 4: search.v1.InitChannelResponse.result:type_name -> search.v1.InitChannelResponse.Result
	2,  // 5: search.v1.StartChannelResponse.result:type_name -> search.v1.StartChannelResponse.Result
	3,  // 6: search.v1.CloseChannelResponse.result:type_name -> search.v1.CloseChannelResponse.Result
	4,  // 7: search.v1.MessageExchangeResponse.result:type_name -> search.v1.MessageExchangeResponse.Result
	19, // 8: search.v1.RegisterChannelRequest.PresetParticipantsEntry.value:type_name -> search.v1.RemoteParticipant
	19, // 9: search.v1.InitChannelRequest.ParticipantsEntry.value:type_name -> search.v1.RemoteParticipant
	7,  // 10: search.v1.PrivateMiddlewareService.RegisterChannel:input_type -> search.v1.RegisterChannelRequest
	13, // 11: search.v1.PrivateMiddlewareService.CloseChannel:input_type -> search.v1.CloseChannelRequest
	20, // 12: search.v1.PrivateMiddlewareService.AppSend:input_type -> search.v1.AppSendRequest
	6,  // 13: search.v1.PrivateMiddlewareService.AppRecv:input_type -> search.v1.AppRecvRequest
	9,  // 14: search.v1.PublicMiddlewareService.InitChannel:input_type -> search.v1.InitChannelRequest
	11, // 15: search.v1.PublicMiddlewareService.StartChannel:input_type -> search.v1.StartChannelRequest
	21, // 16: search.v1.PublicMiddlewareService.MessageExchange:input_type -> search.v1.MessageExchangeRequest
	8,  // 17: search.v1.PrivateMiddlewareService.RegisterChannel:output_type -> search.v1.RegisterChannelResponse
	14, // 18: search.v1.PrivateMiddlewareService.CloseChannel:output_type -> search.v1.CloseChannelResponse
	5,  // 19: search.v1.PrivateMiddlewareService.AppSend:output_type -> search.v1.AppSendResponse
	22, // 20: search.v1.PrivateMiddlewareService.AppRecv:output_type -> search.v1.AppRecvResponse
	10, // 21: search.v1.PublicMiddlewareService.InitChannel:output_type -> search.v1.InitChannelResponse
	12, // 22: search.v1.PublicMiddlewareService.StartChannel:output_type -> search.v1.StartChannelResponse
	15, // 23: search.v1.PublicMiddlewareService.MessageExchange:output_type -> search.v1.MessageExchangeResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_search_v1_middleware_proto_init() }
func file_search_v1_middleware_proto_init() {
	if File_search_v1_middleware_proto != nil {
		return
	}
	file_search_v1_app_message_proto_init()
	file_search_v1_contracts_proto_init()
	file_search_v1_broker_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_search_v1_middleware_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRecvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_v1_middleware_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_search_v1_middleware_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_search_v1_middleware_proto_goTypes,
		DependencyIndexes: file_search_v1_middleware_proto_depIdxs,
		EnumInfos:         file_search_v1_middleware_proto_enumTypes,
		MessageInfos:      file_search_v1_middleware_proto_msgTypes,
	}.Build()
	File_search_v1_middleware_proto = out.File
	file_search_v1_middleware_proto_rawDesc = nil
	file_search_v1_middleware_proto_goTypes = nil
	file_search_v1_middleware_proto_depIdxs = nil
}
